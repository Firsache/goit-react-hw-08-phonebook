{"version":3,"file":"static/js/543.813b4078.chunk.js","mappings":"8RA6EA,UA5DqB,WACnB,IAAMA,GAAWC,EAAAA,EAAAA,MACXC,GAAaC,EAAAA,EAAAA,IAAYC,EAAAA,GACzBC,GAAQF,EAAAA,EAAAA,IAAYG,EAAAA,IACpBC,GAAUJ,EAAAA,EAAAA,IAAYK,EAAAA,IACtBC,GAAWC,EAAAA,EAAAA,MAYXC,EAAmBC,EAAAA,GAAW,CAClCC,KAAMD,EAAAA,KACHE,IAAI,EAAG,kCACPC,IAAI,GAAI,iCACRC,SAAS,YACZC,SAAUL,EAAAA,KACPE,IAAI,EAAG,kCACPC,IAAI,GAAI,iCACRC,SAAS,YACZE,MAAON,EAAAA,KAAaM,MAAM,yBAAyBF,SAAS,cAY9D,OALAG,EAAAA,EAAAA,YAAU,WACHjB,GACLO,EAASW,EAAAA,EAAAA,SACV,GAAE,CAAClB,EAAYO,KAGd,UAAC,IAAD,YACE,SAAC,KAAD,CAASY,MAAM,UAAf,UACE,SAAC,KAAD,CACEC,cA9Bc,CACpBT,KAAM,GACNK,MAAO,GACPD,SAAU,IA4BJN,iBAAkBA,EAClBY,SAhBS,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAC1BzB,GAAS0B,EAAAA,EAAAA,IAASF,IAClBC,GACD,EAUK,UAKE,UAAC,KAAD,WAvCO,CACb,CAAEE,MAAO,OAAQC,KAAM,OAAQf,KAAM,QACrC,CAAEc,MAAO,QAASC,KAAM,QAASf,KAAM,SACvC,CAAEc,MAAO,WAAYC,KAAM,WAAYf,KAAM,aAqC7BgB,KAAI,gBAAGF,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAMf,EAAhB,EAAgBA,KAAhB,OACV,SAAC,IAAD,CAAsBc,MAAOA,EAAOC,KAAMA,EAAMf,KAAMA,GAAtCA,EADN,KAGZ,SAAC,KAAD,CAAQe,KAAK,SAAb,4BAKLrB,IAAW,SAAC,KAAD,IACXF,IAAS,6EAGf,C","sources":["pages/SignUp/SignUp.jsx"],"sourcesContent":["import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { useNavigate } from 'react-router-dom';\n\nimport { routes } from 'helpers/routes';\n\nimport { selectedIsLoggedIn } from 'redux/auth/selectors';\nimport { selectError, selectLoader } from 'redux/contacts/selectors';\nimport { register } from 'redux/auth/auth-operations';\nimport { Button } from 'components/ContactForm/ContactForm.styled';\n\nimport { Loader, Section } from 'components';\nimport { Container } from 'common/common.styled';\nimport { TextField } from 'components/FormikForm/TextField';\n\nconst RegisterForm = () => {\n  const dispatch = useDispatch();\n  const isLoggedIn = useSelector(selectedIsLoggedIn);\n  const error = useSelector(selectError);\n  const loading = useSelector(selectLoader);\n  const navigate = useNavigate();\n\n  const config = [\n    { label: 'Name', type: 'text', name: 'name' },\n    { label: 'Email', type: 'email', name: 'email' },\n    { label: 'Password', type: 'password', name: 'password' },\n  ];\n  const initialValues = {\n    name: '',\n    email: '',\n    password: '',\n  };\n  const validationSchema = Yup.object({\n    name: Yup.string()\n      .min(3, 'Must be more than 7 characters')\n      .max(20, 'Must be 20 characters or less')\n      .required('Required'),\n    password: Yup.string()\n      .min(7, 'Must be more than 7 characters')\n      .max(20, 'Must be 20 characters or less')\n      .required('Required'),\n    email: Yup.string().email('Invalid email address').required('Required'),\n  });\n  const onSubmit = (values, { resetForm }) => {\n    dispatch(register(values));\n    resetForm();\n  };\n\n  useEffect(() => {\n    if (!isLoggedIn) return;\n    navigate(routes.CONTACTS);\n  }, [isLoggedIn, navigate]);\n\n  return (\n    <Container>\n      <Section title=\"Sign In\">\n        <Formik\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n          onSubmit={onSubmit}\n        >\n          <Form>\n            {config.map(({ label, type, name }) => (\n              <TextField key={name} label={label} type={type} name={name} />\n            ))}\n            <Button type=\"submit\">Sign In</Button>\n          </Form>\n        </Formik>\n      </Section>\n\n      {loading && <Loader />}\n      {error && <div>Ooops, something went wrong.. Try a bit later</div>}\n    </Container>\n  );\n};\nexport default RegisterForm;\n\n// import { useEffect, useState } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { useNavigate } from 'react-router-dom';\n// import { BsEnvelope, BsPersonPlus, BsKey } from 'react-icons/bs';\n\n// import { Loader, Section } from 'components';\n// import { routes } from 'helpers/routes';\n// import { selectedIsLoggedIn } from 'redux/auth/selectors';\n// import { selectError, selectLoader } from 'redux/contacts/selectors';\n// import { register } from 'redux/auth/auth-operations';\n\n// import { Container } from 'common/common.styled';\n// import {\n//   Button,\n//   Input,\n//   Label,\n//   Span,\n// } from 'components/ContactForm/ContactForm.styled';\n\n// const RegisterForm = () => {\n//   const [name, setName] = useState('');\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const dispatch = useDispatch();\n//   const isLoggedIn = useSelector(selectedIsLoggedIn);\n//   const error = useSelector(selectError);\n//   const loading = useSelector(selectLoader);\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     if (!isLoggedIn) return;\n//     navigate(routes.CONTACTS);\n//   }, [isLoggedIn, navigate]);\n\n//   const handleInputChange = evt => {\n//     const { name, value } = evt.target;\n\n//     if (name === 'name') setName(value);\n//     if (name === 'email') setEmail(value);\n//     if (name === 'password') setPassword(value);\n//   };\n\n//   const handleSubmit = evt => {\n//     evt.preventDefault();\n//     dispatch(register({ name: name.trim(), email, password }));\n\n//     setName('');\n//     setEmail('');\n//     setPassword('');\n//   };\n\n//   return (\n//     <Container>\n//       <Section title=\"Sign Up\">\n//         <form onSubmit={handleSubmit}>\n//           <Label>\n//             <Span>Name</Span>\n//             <BsPersonPlus size={15} className=\"icon\" />\n//             <Input\n//               type=\"text\"\n//               name=\"name\"\n//               minLength={3}\n//               maxLength={20}\n//               required\n//               value={name}\n//               onChange={handleInputChange}\n//             />\n//           </Label>\n//           <Label>\n//             <Span>Email</Span>\n//             <BsEnvelope size={15} className=\"icon\" />\n//             <Input\n//               type=\"email\"\n//               name=\"email\"\n//               minLength={3}\n//               maxLength={30}\n//               required\n//               value={email}\n//               onChange={handleInputChange}\n//             />\n//           </Label>\n//           <Label>\n//             <Span>Password</Span>\n//             <BsKey size={15} className=\"icon\" />\n//             <Input\n//               type=\"password\"\n//               name=\"password\"\n//               minLength={7}\n//               maxLength={20}\n//               required\n//               value={password}\n//               onChange={handleInputChange}\n//             />\n//           </Label>\n//           <Button type=\"submit\">Sign Up</Button>\n//         </form>\n//       </Section>\n//       {loading && <Loader />}\n//       {error && <div>Ooops, something went wrong.. Try a bit later</div>}\n//     </Container>\n//   );\n// };\n\n// export default RegisterForm;\n"],"names":["dispatch","useDispatch","isLoggedIn","useSelector","selectedIsLoggedIn","error","selectError","loading","selectLoader","navigate","useNavigate","validationSchema","Yup","name","min","max","required","password","email","useEffect","routes","title","initialValues","onSubmit","values","resetForm","register","label","type","map"],"sourceRoot":""}