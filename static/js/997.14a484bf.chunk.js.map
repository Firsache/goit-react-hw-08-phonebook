{"version":3,"file":"static/js/997.14a484bf.chunk.js","mappings":"8PAeA,I,QAAA,EAVA,SAA0BA,EAAWC,GAOnC,OAN8B,SAAAC,GAG5B,OAFmBC,EAAAA,EAAAA,IAAYC,EAAAA,IAEX,SAACJ,GAAD,UAAeE,KAAY,SAAC,KAAD,CAAUG,GAAIJ,GAC9D,CAGF,E,qECXYK,EAAOC,EAAAA,GAAAA,GAAH,gIAKR,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAEGC,EAAOJ,EAAAA,GAAAA,GAAH,sIAKR,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAGGE,EAAOL,EAAAA,GAAAA,EAAH,2CACF,SAAAC,GAAC,OAAIA,EAAEC,MAAMI,UAAUC,CAAtB,IAGHC,EAAmBR,EAAAA,GAAAA,IAAH,yDAEpB,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,I,oBCwFV,EAAeM,GA7EM,WACnB,IAAMC,GAAWd,EAAAA,EAAAA,IAAYe,EAAAA,IACvBC,GAAehB,EAAAA,EAAAA,IAAYiB,EAAAA,IAC3BC,GAAYlB,EAAAA,EAAAA,IAAYmB,EAAAA,IACxBC,GAAQpB,EAAAA,EAAAA,IAAYqB,EAAAA,IACpBC,GAAUtB,EAAAA,EAAAA,IAAYuB,EAAAA,IAEtBC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACRF,GAASG,EAAAA,EAAAA,MACV,GAAE,CAACH,IAEJ,IAcMI,EAVsB,SAACd,EAAUe,GACrC,OAAOf,EAASe,QAAO,SAAAC,GAAC,OACtBA,EAAEC,KAAKC,cAAcC,SAASJ,EAAOG,cADf,GAGzB,CAMwBE,CAAoBpB,EAAUE,GAEvD,OACE,UAAC,IAAD,YACE,SAAC,IAAD,KACA,UAAC,KAAD,CAASmB,MAAM,WAAf,WACIrB,EAASsB,OAAS,GAAKpB,KAAiB,SAAC,KAAD,IACzCqB,QAAQT,EAAiBQ,UACxB,SAACjC,EAAD,UACGyB,EAAiBU,KAAI,gBAAGC,EAAH,EAAGA,GAAIR,EAAP,EAAOA,KAAMS,EAAb,EAAaA,OAAb,OACpB,UAAChC,EAAD,YACE,UAACC,EAAD,WACGsB,EADH,MACU,0BAAOS,QAGjB,UAAC5B,EAAD,YACE,SAAC,KAAD,CACE6B,QAAS,WAtBP,IAAAC,IAuBYH,EAtB9Bf,GAASmB,EAAAA,EAAAA,IAAeD,IACxBlB,GAASoB,EAAAA,EAAAA,MAsBQ,EAHH,mBAOA,SAAC,KAAD,CACEH,QAAS,WAtCG,IAAAC,IAuCYH,EAtCxCf,GAASqB,EAAAA,EAAAA,IAAYH,GAuCJ,EAHH,yBAbOH,EADS,OA0BxBF,QAAQvB,EAASsB,UACjB,SAAC,KAAD,CAAcU,QAAQ,kDAEvBT,QAAQvB,EAASsB,UAAYC,QAAQT,EAAiBQ,UACrD,SAAC,KAAD,CAAcU,QAAQ,qCAGzBxB,IAAW,SAAC,KAAD,IACXF,IAAS,4EACV,SAAC,KAAD,CAAgB2B,UAAW,MAC1B7B,IAAa,SAAC,KAAD,MAGnB,GAE6C8B,EAAAA,EAAAA,M","sources":["HOC/WithAuthRedirect.jsx","pages/Contacts/Contacts.styled.js","pages/Contacts/Contacts.jsx"],"sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport { selectedIsLoggedIn } from 'redux/auth/selectors';\n\nfunction WithAuthRedirect(Component, navigateTo) {\n  const ComponentWithRedirect = props => {\n    const isLoggedIn = useSelector(selectedIsLoggedIn);\n\n    return isLoggedIn ? <Component {...props} /> : <Navigate to={navigateTo} />;\n  };\n\n  return ComponentWithRedirect;\n}\n\nexport default WithAuthRedirect;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: ${p => p.theme.space[4]}px;\n`;\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: baseline;\n  width: 100%;\n  gap: ${p => p.theme.space[4]}px;\n`;\n\nexport const Text = styled.p`\n  font-size: ${p => p.theme.fontSizes.m};\n`;\n\nexport const ButtonsContainer = styled.div`\n  display: flex;\n  gap: ${p => p.theme.space[4]}px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { routes } from 'helpers/routes';\nimport WithAuthRedirect from 'HOC/WithAuthRedirect';\n\nimport {\n  selectContacts,\n  selectEditModal,\n  selectError,\n  selectFilteredName,\n  selectLoader,\n} from 'redux/contacts/selectors';\n\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { getContacts, delContacts } from 'redux/contacts/operations';\nimport {\n  ContactForm,\n  Filter,\n  Loader,\n  ModalEdit,\n  Notification,\n  Section,\n} from 'components';\nimport {\n  Button,\n  ButtonSecondary,\n} from 'components/ContactForm/ContactForm.styled';\n\nimport { List, Item, Text, ButtonsContainer } from './Contacts.styled';\nimport { Container } from 'common/common.styled';\nimport { setEditContact, setEditModal } from 'redux/contacts/contactsSlice';\n\nconst ContactsPage = () => {\n  const contacts = useSelector(selectContacts);\n  const filteredName = useSelector(selectFilteredName);\n  const editModal = useSelector(selectEditModal);\n  const error = useSelector(selectError);\n  const loading = useSelector(selectLoader);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getContacts());\n  }, [dispatch]);\n\n  const deleteSelectedContact = contactId => {\n    dispatch(delContacts(contactId));\n  };\n\n  const getFilteredContacts = (contacts, filter) => {\n    return contacts.filter(c =>\n      c.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n  const toggleModal = contactId => {\n    dispatch(setEditContact(contactId));\n    dispatch(setEditModal());\n  };\n\n  const filteredContacts = getFilteredContacts(contacts, filteredName);\n\n  return (\n    <Container>\n      <ContactForm />\n      <Section title=\"Contacts\">\n        {(contacts.length > 1 || filteredName) && <Filter />}\n        {Boolean(filteredContacts.length) && (\n          <List>\n            {filteredContacts.map(({ id, name, number }) => (\n              <Item key={id}>\n                <Text>\n                  {name}: <span>{number}</span>\n                </Text>\n\n                <ButtonsContainer>\n                  <ButtonSecondary\n                    onClick={() => {\n                      toggleModal(id);\n                    }}\n                  >\n                    Edit\n                  </ButtonSecondary>\n                  <Button\n                    onClick={() => {\n                      deleteSelectedContact(id);\n                    }}\n                  >\n                    Delete\n                  </Button>\n                </ButtonsContainer>\n              </Item>\n            ))}\n          </List>\n        )}\n        {!Boolean(contacts.length) && (\n          <Notification message=\"There are no contacts in the phonebook yet...\" />\n        )}\n        {Boolean(contacts.length) && !Boolean(filteredContacts.length) && (\n          <Notification message=\"There isn't such a contact...\" />\n        )}\n      </Section>\n      {loading && <Loader />}\n      {error && <div>Ooops, something went wrong.. Try a bit later</div>}\n      <ToastContainer autoClose={3000} />\n      {editModal && <ModalEdit />}\n    </Container>\n  );\n};\n\nexport default WithAuthRedirect(ContactsPage, routes.LOGIN);\n"],"names":["Component","navigateTo","props","useSelector","selectedIsLoggedIn","to","List","styled","p","theme","space","Item","Text","fontSizes","m","ButtonsContainer","WithAuthRedirect","contacts","selectContacts","filteredName","selectFilteredName","editModal","selectEditModal","error","selectError","loading","selectLoader","dispatch","useDispatch","useEffect","getContacts","filteredContacts","filter","c","name","toLowerCase","includes","getFilteredContacts","title","length","Boolean","map","id","number","onClick","contactId","setEditContact","setEditModal","delContacts","message","autoClose","routes"],"sourceRoot":""}